https://www.elastic.co/blog/building-a-better-search-experience-in-kibana?blade

- 검색은 매우중요함. y?
 -> 엘라스틱 스택의 존재 이유임.
 -> 쿼리 검색바가 키바나 최상단에있음
 -> 검색은 경험의 필수적인요소.
 -> 키바나의 코어파트같이, 현재 쿼리바는 어떤것을 채워놔야됨.
 -> 파워유저는 이것을 ㅎ완성함.
  자동완성 기능은 매우좋음. 
  스크립트 필드는 약간의 역동적이고.  헬프페이지도 괜찮음
  

1. kuery 소개
- 키바나의 새로운 쿼리 언어
- kuery는 간단하게 설계됨. 쓰기 친숙할듯.
- ex)all검색시 
    -> 200, 
    필드 하나로 제한해서 검색시
    -> response:200
- 만약, 범위 쿼리를 사용하면, 부울 연산자(AND/OR) , 부정, 그룹핑, 이 모든 
전부터 사용했던 쿼리언어의 약간 변형된 것 같은 느낌,?
    -> bytes:[0 TO 8000] AND !200 AND (extension:jpg OR extension:css)
    

2. 모든쿼리에는 이름이 있을만함.
- 모든 쿼리타입은 실제로 이름붙은 함수이고, 
- 예를들면, 연산자신택스를 사용하는 것은 모든 대부분의 쿼리타입에 제공됨.
우리는 간단한 쿼리를 원함. 간단하고 간결하게,
그러나 모든 쿼리타입은 함수이름을 가지고있었음. 
다음예제를 다시 쓰자면. 다음과 같음
(response:200) -> is(response,200)
- 콜론 연산자는 is 함수의 알리아스임.
- 세번째 예에 비슷한 방법으로 사용하면서 범위쿼리를 다시 쓸수있다.
   range(bytes, gte=0, lte=8000)
- 모든쿼리를 말할때는 정말로 의미하는 함수이다.
부울 연산자조차 펑션으로 다시 쓸수있는/.
여기 세번째 예가 있음

and(rnage(bytes, gte=0,lte=8000), not(is(response, 200)), or(is(extension, jpg), is(extension,css)))

 - 보기 쉽다. 그래서 간결한 연산자를 사용하는 것임.
 - 중요한점은 모든 쿼리가 정식명칭을 가지고있다.
 - 새로운 쿼리 타입의 어떤 독단적인 숫자도 지원하게 언어를 지원하는 쉬운 방법이다.
 - geo bounding box query: 밑에있음

geoBoundingBox("geo.coordinates", topLeft = "71.965, 172.96", bottomRight = "55.379, 135.351")

이 문서에서 지원되는 쿼리타입의 전체리스트를 확인함. 
미래에는 이 함수들을 연결해서 만들려고하고싶어함 그래서 유저들이 자신의 커스텀 쿼리타입도 정의할수 있게 

3. 바차트로 통합
- 쿼리바에 추가적으로, 키바나는 필터바를 가지고있음.
- 필수적으로 같은 목적에 제공하기때문에 두 차이에 대해 혼동이 올수 있음

- 각각은 약간의 역량의 차이가 있는데, 결과 셋에서 필터하려고 사용하긴 했음
 ? 이 케이스에서는 필터와 쿼리 스트링이 기본적으로 비슷함
 
 - 여러가지 방법으로 같은 결과를 정확히 운용하려면 혼란스러운 경험을 좀 할필요잇음.
 - 필터바를 제거하고 와 쿼리바를 파워업하는것으로써쿼리로 하는것중 목적하나는 이러한 혼란을 없어지게하는 것
 - 개별적인 바안에서 추가적인 필터 대신 ui안에서 쿼리를 업데이트 하는 상호작용임
 - 혼란을 없애는것 뿐아니라 새로운 유저가 어떤 쿼리 랭귀지를 사용하는지 알려줌.그들이 키바나에서 노는것으로써
 
 - 간단히 쿼리스트링을 편집하는것으로 직관적으로 대부분의 필터액션 부정, 지우기 편집같은것들 할수있음. 
 - 만약에 ㄴ상호작용경험을 필터 유아이로 제공해주는것을 한다면, 조마해하지마라
 - 통합하는 필터에디터ㄹ를 직접적으로 쿼리바안으로 하는것을 계획함. 
 - 디자인은 아직도 그 일안에있지만 목적은 비기너와 능숙자들을 위한 유용한 쿼리바를 만드는거임.

4. scripted fields




5. 더 발전!




